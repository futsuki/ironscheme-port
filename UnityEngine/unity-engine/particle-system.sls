(library (unity-engine particle-system)
  (export new
          is?
          particle-system?
          play
          get-particles
          set-particles
          pause
          clear
          stop
          emit
          is-alive?
          simulate
          start-delay-get
          start-delay-set!
          start-delay-update!
          is-playing?
          is-stopped?
          is-paused?
          loop?-get
          loop?-set!
          loop?-update!
          play-on-awake?-get
          play-on-awake?-set!
          play-on-awake?-update!
          time-get
          time-set!
          time-update!
          duration
          playback-speed-get
          playback-speed-set!
          playback-speed-update!
          particle-count
          safe-collision-event-size
          enable-emission?-get
          enable-emission?-set!
          enable-emission?-update!
          emission-rate-get
          emission-rate-set!
          emission-rate-update!
          start-speed-get
          start-speed-set!
          start-speed-update!
          start-size-get
          start-size-set!
          start-size-update!
          start-color-get
          start-color-set!
          start-color-update!
          start-rotation-get
          start-rotation-set!
          start-rotation-update!
          start-lifetime-get
          start-lifetime-set!
          start-lifetime-update!
          gravity-modifier-get
          gravity-modifier-set!
          gravity-modifier-update!
          max-particles-get
          max-particles-set!
          max-particles-update!
          simulation-space-get
          simulation-space-set!
          simulation-space-update!
          random-seed-get
          random-seed-set!
          random-seed-update!)
  (import (ironscheme-clr-port))
  (define-syntax new
    (lambda (e)
      (syntax-case e ()
        ((_ a ...) #'(clr-new UnityEngine.ParticleSystem a ...)))))
  (define (is? a) (clr-is UnityEngine.ParticleSystem a))
  (define (particle-system? a) (clr-is UnityEngine.ParticleSystem a))
  (define-method-port
    play
    UnityEngine.ParticleSystem
    Play
    (System.Void System.Boolean)
    (System.Void))
  (define-method-port
    get-particles
    UnityEngine.ParticleSystem
    GetParticles
    (System.Int32 UnityEngine.ParticleSystem+Particle[]))
  (define-method-port
    set-particles
    UnityEngine.ParticleSystem
    SetParticles
    (System.Void UnityEngine.ParticleSystem+Particle[] System.Int32))
  (define-method-port
    pause
    UnityEngine.ParticleSystem
    Pause
    (System.Void System.Boolean)
    (System.Void))
  (define-method-port
    clear
    UnityEngine.ParticleSystem
    Clear
    (System.Void System.Boolean)
    (System.Void))
  (define-method-port
    stop
    UnityEngine.ParticleSystem
    Stop
    (System.Void System.Boolean)
    (System.Void))
  (define-method-port
    emit
    UnityEngine.ParticleSystem
    Emit
    (System.Void UnityEngine.ParticleSystem+Particle)
    (System.Void
      UnityEngine.Vector3
      UnityEngine.Vector3
      System.Single
      System.Single
      UnityEngine.Color32)
    (System.Void System.Int32))
  (define-method-port
    is-alive?
    UnityEngine.ParticleSystem
    IsAlive
    (System.Boolean System.Boolean)
    (System.Boolean))
  (define-method-port
    simulate
    UnityEngine.ParticleSystem
    Simulate
    (System.Void System.Single System.Boolean System.Boolean)
    (System.Void System.Single)
    (System.Void System.Single System.Boolean))
  (define-field-port
    start-delay-get
    start-delay-set!
    start-delay-update!
    (property:)
    UnityEngine.ParticleSystem
    startDelay
    System.Single)
  (define-field-port
    is-playing?
    #f
    #f
    (property:)
    UnityEngine.ParticleSystem
    isPlaying
    System.Boolean)
  (define-field-port
    is-stopped?
    #f
    #f
    (property:)
    UnityEngine.ParticleSystem
    isStopped
    System.Boolean)
  (define-field-port
    is-paused?
    #f
    #f
    (property:)
    UnityEngine.ParticleSystem
    isPaused
    System.Boolean)
  (define-field-port
    loop?-get
    loop?-set!
    loop?-update!
    (property:)
    UnityEngine.ParticleSystem
    loop
    System.Boolean)
  (define-field-port
    play-on-awake?-get
    play-on-awake?-set!
    play-on-awake?-update!
    (property:)
    UnityEngine.ParticleSystem
    playOnAwake
    System.Boolean)
  (define-field-port
    time-get
    time-set!
    time-update!
    (property:)
    UnityEngine.ParticleSystem
    time
    System.Single)
  (define-field-port
    duration
    #f
    #f
    (property:)
    UnityEngine.ParticleSystem
    duration
    System.Single)
  (define-field-port
    playback-speed-get
    playback-speed-set!
    playback-speed-update!
    (property:)
    UnityEngine.ParticleSystem
    playbackSpeed
    System.Single)
  (define-field-port
    particle-count
    #f
    #f
    (property:)
    UnityEngine.ParticleSystem
    particleCount
    System.Int32)
  (define-field-port
    safe-collision-event-size
    #f
    #f
    (property:)
    UnityEngine.ParticleSystem
    safeCollisionEventSize
    System.Int32)
  (define-field-port
    enable-emission?-get
    enable-emission?-set!
    enable-emission?-update!
    (property:)
    UnityEngine.ParticleSystem
    enableEmission
    System.Boolean)
  (define-field-port
    emission-rate-get
    emission-rate-set!
    emission-rate-update!
    (property:)
    UnityEngine.ParticleSystem
    emissionRate
    System.Single)
  (define-field-port
    start-speed-get
    start-speed-set!
    start-speed-update!
    (property:)
    UnityEngine.ParticleSystem
    startSpeed
    System.Single)
  (define-field-port
    start-size-get
    start-size-set!
    start-size-update!
    (property:)
    UnityEngine.ParticleSystem
    startSize
    System.Single)
  (define-field-port
    start-color-get
    start-color-set!
    start-color-update!
    (property:)
    UnityEngine.ParticleSystem
    startColor
    UnityEngine.Color)
  (define-field-port
    start-rotation-get
    start-rotation-set!
    start-rotation-update!
    (property:)
    UnityEngine.ParticleSystem
    startRotation
    System.Single)
  (define-field-port
    start-lifetime-get
    start-lifetime-set!
    start-lifetime-update!
    (property:)
    UnityEngine.ParticleSystem
    startLifetime
    System.Single)
  (define-field-port
    gravity-modifier-get
    gravity-modifier-set!
    gravity-modifier-update!
    (property:)
    UnityEngine.ParticleSystem
    gravityModifier
    System.Single)
  (define-field-port
    max-particles-get
    max-particles-set!
    max-particles-update!
    (property:)
    UnityEngine.ParticleSystem
    maxParticles
    System.Int32)
  (define-field-port
    simulation-space-get
    simulation-space-set!
    simulation-space-update!
    (property:)
    UnityEngine.ParticleSystem
    simulationSpace
    UnityEngine.ParticleSystemSimulationSpace)
  (define-field-port
    random-seed-get
    random-seed-set!
    random-seed-update!
    (property:)
    UnityEngine.ParticleSystem
    randomSeed
    System.UInt32))
