(library (mono data sql-expressions token)
  (export new
          is?
          token?
          paropen
          parclose
          and
          or
          not
          true
          false
          null
          parent
          child
          eq
          lt
          gt
          plus
          minus
          mul
          div
          mod
          dot
          comma
          is
          in
          not-in
          like
          not-like
          count
          sum
          avg
          max
          min
          stdev
          var
          iif
          substring
          isnull
          len
          trim
          convert
          string-literal
          number-literal
          date-literal
          identifier
          function-name
          uminus
          yy-error-code)
  (import (ironscheme-clr-port))
  (define-syntax new
    (lambda (e)
      (syntax-case e ()
        ((_ a ...) #'(clr-new Mono.Data.SqlExpressions.Token a ...)))))
  (define (is? a) (clr-is Mono.Data.SqlExpressions.Token a))
  (define (token? a) (clr-is Mono.Data.SqlExpressions.Token a))
  (define-field-port
    paropen
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    PAROPEN
    System.Int32)
  (define-field-port
    parclose
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    PARCLOSE
    System.Int32)
  (define-field-port
    and
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    AND
    System.Int32)
  (define-field-port
    or
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    OR
    System.Int32)
  (define-field-port
    not
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    NOT
    System.Int32)
  (define-field-port
    true
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    TRUE
    System.Int32)
  (define-field-port
    false
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    FALSE
    System.Int32)
  (define-field-port
    null
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    NULL
    System.Int32)
  (define-field-port
    parent
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    PARENT
    System.Int32)
  (define-field-port
    child
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    CHILD
    System.Int32)
  (define-field-port
    eq
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    EQ
    System.Int32)
  (define-field-port
    lt
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    LT
    System.Int32)
  (define-field-port
    gt
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    GT
    System.Int32)
  (define-field-port
    plus
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    PLUS
    System.Int32)
  (define-field-port
    minus
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    MINUS
    System.Int32)
  (define-field-port
    mul
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    MUL
    System.Int32)
  (define-field-port
    div
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    DIV
    System.Int32)
  (define-field-port
    mod
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    MOD
    System.Int32)
  (define-field-port
    dot
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    DOT
    System.Int32)
  (define-field-port
    comma
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    COMMA
    System.Int32)
  (define-field-port
    is
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    IS
    System.Int32)
  (define-field-port
    in
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    IN
    System.Int32)
  (define-field-port
    not-in
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    NOT_IN
    System.Int32)
  (define-field-port
    like
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    LIKE
    System.Int32)
  (define-field-port
    not-like
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    NOT_LIKE
    System.Int32)
  (define-field-port
    count
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    COUNT
    System.Int32)
  (define-field-port
    sum
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    SUM
    System.Int32)
  (define-field-port
    avg
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    AVG
    System.Int32)
  (define-field-port
    max
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    MAX
    System.Int32)
  (define-field-port
    min
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    MIN
    System.Int32)
  (define-field-port
    stdev
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    STDEV
    System.Int32)
  (define-field-port
    var
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    VAR
    System.Int32)
  (define-field-port
    iif
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    IIF
    System.Int32)
  (define-field-port
    substring
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    SUBSTRING
    System.Int32)
  (define-field-port
    isnull
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    ISNULL
    System.Int32)
  (define-field-port
    len
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    LEN
    System.Int32)
  (define-field-port
    trim
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    TRIM
    System.Int32)
  (define-field-port
    convert
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    CONVERT
    System.Int32)
  (define-field-port
    string-literal
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    StringLiteral
    System.Int32)
  (define-field-port
    number-literal
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    NumberLiteral
    System.Int32)
  (define-field-port
    date-literal
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    DateLiteral
    System.Int32)
  (define-field-port
    identifier
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    Identifier
    System.Int32)
  (define-field-port
    function-name
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    FunctionName
    System.Int32)
  (define-field-port
    uminus
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    UMINUS
    System.Int32)
  (define-field-port
    yy-error-code
    #f
    #f
    (static:)
    Mono.Data.SqlExpressions.Token
    yyErrorCode
    System.Int32))
