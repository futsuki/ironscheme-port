(library (system reflection method-base)
  (export is?
          method-base?
          get-generic-arguments
          invoke
          get-current-method
          get-method-from-handle
          get-method-body
          get-parameters
          get-method-implementation-flags
          method-handle
          attributes
          calling-convention
          is-public?
          is-private?
          is-family?
          is-assembly?
          is-family-and-assembly?
          is-family-or-assembly?
          is-static?
          is-final?
          is-virtual?
          is-hide-by-sig?
          is-abstract?
          is-special-name?
          is-constructor?
          contains-generic-parameters?
          is-generic-method-definition?
          is-generic-method?)
  (import (ironscheme-clr-port))
  (define (is? a) (clr-is System.Reflection.MethodBase a))
  (define (method-base? a) (clr-is System.Reflection.MethodBase a))
  (define-method-port
    get-generic-arguments
    System.Reflection.MethodBase
    GetGenericArguments
    (System.Type[]))
  (define-method-port
    invoke
    System.Reflection.MethodBase
    Invoke
    (System.Object
      System.Object
      System.Reflection.BindingFlags
      System.Reflection.Binder
      System.Object[]
      System.Globalization.CultureInfo)
    (System.Object System.Object System.Object[]))
  (define-method-port
    get-current-method
    System.Reflection.MethodBase
    GetCurrentMethod
    (static: System.Reflection.MethodBase))
  (define-method-port
    get-method-from-handle
    System.Reflection.MethodBase
    GetMethodFromHandle
    (static:
      System.Reflection.MethodBase
      System.RuntimeMethodHandle
      System.RuntimeTypeHandle)
    (static: System.Reflection.MethodBase System.RuntimeMethodHandle))
  (define-method-port
    get-method-body
    System.Reflection.MethodBase
    GetMethodBody
    (System.Reflection.MethodBody))
  (define-method-port
    get-parameters
    System.Reflection.MethodBase
    GetParameters
    (System.Reflection.ParameterInfo[]))
  (define-method-port
    get-method-implementation-flags
    System.Reflection.MethodBase
    GetMethodImplementationFlags
    (System.Reflection.MethodImplAttributes))
  (define-field-port
    method-handle
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    MethodHandle
    System.RuntimeMethodHandle)
  (define-field-port
    attributes
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    Attributes
    System.Reflection.MethodAttributes)
  (define-field-port
    calling-convention
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    CallingConvention
    System.Reflection.CallingConventions)
  (define-field-port
    is-public?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsPublic
    System.Boolean)
  (define-field-port
    is-private?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsPrivate
    System.Boolean)
  (define-field-port
    is-family?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsFamily
    System.Boolean)
  (define-field-port
    is-assembly?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsAssembly
    System.Boolean)
  (define-field-port
    is-family-and-assembly?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsFamilyAndAssembly
    System.Boolean)
  (define-field-port
    is-family-or-assembly?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsFamilyOrAssembly
    System.Boolean)
  (define-field-port
    is-static?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsStatic
    System.Boolean)
  (define-field-port
    is-final?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsFinal
    System.Boolean)
  (define-field-port
    is-virtual?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsVirtual
    System.Boolean)
  (define-field-port
    is-hide-by-sig?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsHideBySig
    System.Boolean)
  (define-field-port
    is-abstract?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsAbstract
    System.Boolean)
  (define-field-port
    is-special-name?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsSpecialName
    System.Boolean)
  (define-field-port
    is-constructor?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsConstructor
    System.Boolean)
  (define-field-port
    contains-generic-parameters?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    ContainsGenericParameters
    System.Boolean)
  (define-field-port
    is-generic-method-definition?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsGenericMethodDefinition
    System.Boolean)
  (define-field-port
    is-generic-method?
    #f
    #f
    (property:)
    System.Reflection.MethodBase
    IsGenericMethod
    System.Boolean))
