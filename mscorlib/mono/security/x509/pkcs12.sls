(library (mono security x509 pkcs12)
  (export new
          is?
          pkcs12?
          clone
          add-key-bag
          get-secret
          get-attributes
          get-bytes
          save-to-file
          remove-secret-bag
          get-certificate
          encrypt
          add-secret-bag
          load-from-file
          add-certificate
          decrypt
          get-asymmetric-algorithm
          remove-key-bag
          add-pkcs8-shrouded-key-bag
          remove-certificate
          remove-pkcs8-shrouded-key-bag
          pbe-with-shaand128-bit-rc4
          pbe-with-shaand40-bit-rc4
          pbe-with-shaand3-key-triple-descbc
          pbe-with-shaand2-key-triple-descbc
          pbe-with-shaand128-bit-rc2-cbc
          pbe-with-shaand40-bit-rc2-cbc
          key-bag
          pkcs8-shrouded-key-bag
          cert-bag
          crl-bag
          secret-bag
          safe-contents-bag
          x509-certificate
          sdsi-certificate
          x509-crl
          crypto-api-password-limit
          password
          iteration-count-get
          iteration-count-set!
          iteration-count-update!
          keys
          secrets
          certificates
          maximum-password-length-get
          maximum-password-length-set!
          maximum-password-length-update!)
  (import (ironscheme-clr-port))
  (define-syntax new
    (lambda (e)
      (syntax-case e ()
        ((_ a ...) #'(clr-new Mono.Security.X509.PKCS12 a ...)))))
  (define (is? a) (clr-is Mono.Security.X509.PKCS12 a))
  (define (pkcs12? a) (clr-is Mono.Security.X509.PKCS12 a))
  (define-method-port
    clone
    Mono.Security.X509.PKCS12
    Clone
    (System.Object))
  (define-method-port
    add-key-bag
    Mono.Security.X509.PKCS12
    AddKeyBag
    (System.Void
      System.Security.Cryptography.AsymmetricAlgorithm
      System.Collections.IDictionary)
    (System.Void System.Security.Cryptography.AsymmetricAlgorithm))
  (define-method-port
    get-secret
    Mono.Security.X509.PKCS12
    GetSecret
    (System.Byte[] System.Collections.IDictionary))
  (define-method-port
    get-attributes
    Mono.Security.X509.PKCS12
    GetAttributes
    (System.Collections.IDictionary Mono.Security.X509.X509Certificate)
    (System.Collections.IDictionary
      System.Security.Cryptography.AsymmetricAlgorithm))
  (define-method-port
    get-bytes
    Mono.Security.X509.PKCS12
    GetBytes
    (System.Byte[]))
  (define-method-port
    save-to-file
    Mono.Security.X509.PKCS12
    SaveToFile
    (System.Void System.String))
  (define-method-port
    remove-secret-bag
    Mono.Security.X509.PKCS12
    RemoveSecretBag
    (System.Void System.Byte[]))
  (define-method-port
    get-certificate
    Mono.Security.X509.PKCS12
    GetCertificate
    (Mono.Security.X509.X509Certificate System.Collections.IDictionary))
  (define-method-port
    encrypt
    Mono.Security.X509.PKCS12
    Encrypt
    (System.Byte[]
      System.String
      System.Byte[]
      System.Int32
      System.Byte[]))
  (define-method-port
    add-secret-bag
    Mono.Security.X509.PKCS12
    AddSecretBag
    (System.Void System.Byte[] System.Collections.IDictionary)
    (System.Void System.Byte[]))
  (define-method-port
    load-from-file
    Mono.Security.X509.PKCS12
    LoadFromFile
    (static: Mono.Security.X509.PKCS12 System.String System.String)
    (static: Mono.Security.X509.PKCS12 System.String))
  (define-method-port
    add-certificate
    Mono.Security.X509.PKCS12
    AddCertificate
    (System.Void
      Mono.Security.X509.X509Certificate
      System.Collections.IDictionary)
    (System.Void Mono.Security.X509.X509Certificate))
  (define-method-port
    decrypt
    Mono.Security.X509.PKCS12
    Decrypt
    (System.Byte[] Mono.Security.PKCS7+EncryptedData)
    (System.Byte[]
      System.String
      System.Byte[]
      System.Int32
      System.Byte[]))
  (define-method-port
    get-asymmetric-algorithm
    Mono.Security.X509.PKCS12
    GetAsymmetricAlgorithm
    (System.Security.Cryptography.AsymmetricAlgorithm
      System.Collections.IDictionary))
  (define-method-port
    remove-key-bag
    Mono.Security.X509.PKCS12
    RemoveKeyBag
    (System.Void System.Security.Cryptography.AsymmetricAlgorithm))
  (define-method-port
    add-pkcs8-shrouded-key-bag
    Mono.Security.X509.PKCS12
    AddPkcs8ShroudedKeyBag
    (System.Void
      System.Security.Cryptography.AsymmetricAlgorithm
      System.Collections.IDictionary)
    (System.Void System.Security.Cryptography.AsymmetricAlgorithm))
  (define-method-port
    remove-certificate
    Mono.Security.X509.PKCS12
    RemoveCertificate
    (System.Void
      Mono.Security.X509.X509Certificate
      System.Collections.IDictionary)
    (System.Void Mono.Security.X509.X509Certificate))
  (define-method-port
    remove-pkcs8-shrouded-key-bag
    Mono.Security.X509.PKCS12
    RemovePkcs8ShroudedKeyBag
    (System.Void System.Security.Cryptography.AsymmetricAlgorithm))
  (define-field-port
    pbe-with-shaand128-bit-rc4
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    pbeWithSHAAnd128BitRC4
    System.String)
  (define-field-port
    pbe-with-shaand40-bit-rc4
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    pbeWithSHAAnd40BitRC4
    System.String)
  (define-field-port
    pbe-with-shaand3-key-triple-descbc
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    pbeWithSHAAnd3KeyTripleDESCBC
    System.String)
  (define-field-port
    pbe-with-shaand2-key-triple-descbc
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    pbeWithSHAAnd2KeyTripleDESCBC
    System.String)
  (define-field-port
    pbe-with-shaand128-bit-rc2-cbc
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    pbeWithSHAAnd128BitRC2CBC
    System.String)
  (define-field-port
    pbe-with-shaand40-bit-rc2-cbc
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    pbeWithSHAAnd40BitRC2CBC
    System.String)
  (define-field-port
    key-bag
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    keyBag
    System.String)
  (define-field-port
    pkcs8-shrouded-key-bag
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    pkcs8ShroudedKeyBag
    System.String)
  (define-field-port
    cert-bag
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    certBag
    System.String)
  (define-field-port
    crl-bag
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    crlBag
    System.String)
  (define-field-port
    secret-bag
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    secretBag
    System.String)
  (define-field-port
    safe-contents-bag
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    safeContentsBag
    System.String)
  (define-field-port
    x509-certificate
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    x509Certificate
    System.String)
  (define-field-port
    sdsi-certificate
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    sdsiCertificate
    System.String)
  (define-field-port
    x509-crl
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    x509Crl
    System.String)
  (define-field-port
    crypto-api-password-limit
    #f
    #f
    (static:)
    Mono.Security.X509.PKCS12
    CryptoApiPasswordLimit
    System.Int32)
  (define-field-port
    #f
    password
    #f
    (property:)
    Mono.Security.X509.PKCS12
    Password
    System.String)
  (define-field-port
    iteration-count-get
    iteration-count-set!
    iteration-count-update!
    (property:)
    Mono.Security.X509.PKCS12
    IterationCount
    System.Int32)
  (define-field-port
    keys
    #f
    #f
    (property:)
    Mono.Security.X509.PKCS12
    Keys
    System.Collections.ArrayList)
  (define-field-port
    secrets
    #f
    #f
    (property:)
    Mono.Security.X509.PKCS12
    Secrets
    System.Collections.ArrayList)
  (define-field-port
    certificates
    #f
    #f
    (property:)
    Mono.Security.X509.PKCS12
    Certificates
    Mono.Security.X509.X509CertificateCollection)
  (define-field-port
    maximum-password-length-get
    maximum-password-length-set!
    maximum-password-length-update!
    (static: property:)
    Mono.Security.X509.PKCS12
    MaximumPasswordLength
    System.Int32))
