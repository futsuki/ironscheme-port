(library (mono security uri)
  (export new
          is?
          uri?
          get-hash-code
          get-left-part
          make-relative
          to-string
          from-hex
          hex-unescape
          is-hex-encoding?
          check-scheme-name?
          hex-escape
          equals?
          is-hex-digit?
          scheme-delimiter
          uri-scheme-file
          uri-scheme-ftp
          uri-scheme-gopher
          uri-scheme-http
          uri-scheme-https
          uri-scheme-mailto
          uri-scheme-news
          uri-scheme-nntp
          absolute-path
          absolute-uri
          authority
          fragment
          host
          is-default-port?
          is-file?
          is-loopback?
          is-unc?
          local-path
          path-and-query
          port
          query
          scheme
          segments
          user-escaped?
          user-info)
  (import (ironscheme-clr-port))
  (define-syntax new
    (lambda (e)
      (syntax-case e ()
        ((_ a ...) #'(clr-new Mono.Security.Uri a ...)))))
  (define (is? a) (clr-is Mono.Security.Uri a))
  (define (uri? a) (clr-is Mono.Security.Uri a))
  (define-method-port
    get-hash-code
    Mono.Security.Uri
    GetHashCode
    (System.Int32))
  (define-method-port
    get-left-part
    Mono.Security.Uri
    GetLeftPart
    (System.String Mono.Security.UriPartial))
  (define-method-port
    make-relative
    Mono.Security.Uri
    MakeRelative
    (System.String Mono.Security.Uri))
  (define-method-port
    to-string
    Mono.Security.Uri
    ToString
    (System.String))
  (define-method-port
    from-hex
    Mono.Security.Uri
    FromHex
    (static: System.Int32 System.Char))
  (define-method-port
    hex-unescape
    Mono.Security.Uri
    HexUnescape
    (static: System.Char System.String System.Int32&))
  (define-method-port
    is-hex-encoding?
    Mono.Security.Uri
    IsHexEncoding
    (static: System.Boolean System.String System.Int32))
  (define-method-port
    check-scheme-name?
    Mono.Security.Uri
    CheckSchemeName
    (static: System.Boolean System.String))
  (define-method-port
    hex-escape
    Mono.Security.Uri
    HexEscape
    (static: System.String System.Char))
  (define-method-port
    equals?
    Mono.Security.Uri
    Equals
    (System.Boolean System.Object))
  (define-method-port
    is-hex-digit?
    Mono.Security.Uri
    IsHexDigit
    (static: System.Boolean System.Char))
  (define-field-port
    scheme-delimiter
    #f
    #f
    (static:)
    Mono.Security.Uri
    SchemeDelimiter
    System.String)
  (define-field-port
    uri-scheme-file
    #f
    #f
    (static:)
    Mono.Security.Uri
    UriSchemeFile
    System.String)
  (define-field-port
    uri-scheme-ftp
    #f
    #f
    (static:)
    Mono.Security.Uri
    UriSchemeFtp
    System.String)
  (define-field-port
    uri-scheme-gopher
    #f
    #f
    (static:)
    Mono.Security.Uri
    UriSchemeGopher
    System.String)
  (define-field-port
    uri-scheme-http
    #f
    #f
    (static:)
    Mono.Security.Uri
    UriSchemeHttp
    System.String)
  (define-field-port
    uri-scheme-https
    #f
    #f
    (static:)
    Mono.Security.Uri
    UriSchemeHttps
    System.String)
  (define-field-port
    uri-scheme-mailto
    #f
    #f
    (static:)
    Mono.Security.Uri
    UriSchemeMailto
    System.String)
  (define-field-port
    uri-scheme-news
    #f
    #f
    (static:)
    Mono.Security.Uri
    UriSchemeNews
    System.String)
  (define-field-port
    uri-scheme-nntp
    #f
    #f
    (static:)
    Mono.Security.Uri
    UriSchemeNntp
    System.String)
  (define-field-port
    absolute-path
    #f
    #f
    (property:)
    Mono.Security.Uri
    AbsolutePath
    System.String)
  (define-field-port
    absolute-uri
    #f
    #f
    (property:)
    Mono.Security.Uri
    AbsoluteUri
    System.String)
  (define-field-port
    authority
    #f
    #f
    (property:)
    Mono.Security.Uri
    Authority
    System.String)
  (define-field-port
    fragment
    #f
    #f
    (property:)
    Mono.Security.Uri
    Fragment
    System.String)
  (define-field-port
    host
    #f
    #f
    (property:)
    Mono.Security.Uri
    Host
    System.String)
  (define-field-port
    is-default-port?
    #f
    #f
    (property:)
    Mono.Security.Uri
    IsDefaultPort
    System.Boolean)
  (define-field-port
    is-file?
    #f
    #f
    (property:)
    Mono.Security.Uri
    IsFile
    System.Boolean)
  (define-field-port
    is-loopback?
    #f
    #f
    (property:)
    Mono.Security.Uri
    IsLoopback
    System.Boolean)
  (define-field-port
    is-unc?
    #f
    #f
    (property:)
    Mono.Security.Uri
    IsUnc
    System.Boolean)
  (define-field-port
    local-path
    #f
    #f
    (property:)
    Mono.Security.Uri
    LocalPath
    System.String)
  (define-field-port
    path-and-query
    #f
    #f
    (property:)
    Mono.Security.Uri
    PathAndQuery
    System.String)
  (define-field-port
    port
    #f
    #f
    (property:)
    Mono.Security.Uri
    Port
    System.Int32)
  (define-field-port
    query
    #f
    #f
    (property:)
    Mono.Security.Uri
    Query
    System.String)
  (define-field-port
    scheme
    #f
    #f
    (property:)
    Mono.Security.Uri
    Scheme
    System.String)
  (define-field-port
    segments
    #f
    #f
    (property:)
    Mono.Security.Uri
    Segments
    System.String[])
  (define-field-port
    user-escaped?
    #f
    #f
    (property:)
    Mono.Security.Uri
    UserEscaped
    System.Boolean)
  (define-field-port
    user-info
    #f
    #f
    (property:)
    Mono.Security.Uri
    UserInfo
    System.String))
