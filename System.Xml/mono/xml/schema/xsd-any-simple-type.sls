(library (mono xml schema xsd-any-simple-type)
  (export is?
          xsd-any-simple-type?
          parse-value
          instance
          type-code
          bounded?
          finite?
          numeric?
          ordered
          value-type
          tokenized-type)
  (import (ironscheme-clr-port))
  (define (is? a) (clr-is Mono.Xml.Schema.XsdAnySimpleType a))
  (define (xsd-any-simple-type? a)
    (clr-is Mono.Xml.Schema.XsdAnySimpleType a))
  (define-method-port
    parse-value
    Mono.Xml.Schema.XsdAnySimpleType
    ParseValue
    (System.Object
      System.String
      System.Xml.XmlNameTable
      System.Xml.IXmlNamespaceResolver))
  (define-field-port
    instance
    #f
    #f
    (static: property:)
    Mono.Xml.Schema.XsdAnySimpleType
    Instance
    Mono.Xml.Schema.XsdAnySimpleType)
  (define-field-port
    type-code
    #f
    #f
    (property:)
    Mono.Xml.Schema.XsdAnySimpleType
    TypeCode
    System.Xml.Schema.XmlTypeCode)
  (define-field-port
    bounded?
    #f
    #f
    (property:)
    Mono.Xml.Schema.XsdAnySimpleType
    Bounded
    System.Boolean)
  (define-field-port
    finite?
    #f
    #f
    (property:)
    Mono.Xml.Schema.XsdAnySimpleType
    Finite
    System.Boolean)
  (define-field-port
    numeric?
    #f
    #f
    (property:)
    Mono.Xml.Schema.XsdAnySimpleType
    Numeric
    System.Boolean)
  (define-field-port
    ordered
    #f
    #f
    (property:)
    Mono.Xml.Schema.XsdAnySimpleType
    Ordered
    Mono.Xml.Schema.XsdOrderedFacet)
  (define-field-port
    value-type
    #f
    #f
    (property:)
    Mono.Xml.Schema.XsdAnySimpleType
    ValueType
    System.Type)
  (define-field-port
    tokenized-type
    #f
    #f
    (property:)
    Mono.Xml.Schema.XsdAnySimpleType
    TokenizedType
    System.Xml.XmlTokenizedType))
