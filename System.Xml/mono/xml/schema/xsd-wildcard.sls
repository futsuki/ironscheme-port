(library (mono xml schema xsd-wildcard)
  (export new
          is?
          xsd-wildcard?
          examine-attribute-wildcard-intersection?
          compile
          validate-wildcard-allows-namespace-name?
          resolved-processing-get
          resolved-processing-set!
          resolved-processing-update!
          target-namespace-get
          target-namespace-set!
          target-namespace-update!
          skip-compile?-get
          skip-compile?-set!
          skip-compile?-update!
          has-value-any?-get
          has-value-any?-set!
          has-value-any?-update!
          has-value-local?-get
          has-value-local?-set!
          has-value-local?-update!
          has-value-other?-get
          has-value-other?-set!
          has-value-other?-update!
          has-value-target-namespace?-get
          has-value-target-namespace?-set!
          has-value-target-namespace?-update!
          resolved-namespaces-get
          resolved-namespaces-set!
          resolved-namespaces-update!)
  (import (ironscheme-clr-port))
  (define-syntax new
    (lambda (e)
      (syntax-case e ()
        ((_ a ...) #'(clr-new Mono.Xml.Schema.XsdWildcard a ...)))))
  (define (is? a) (clr-is Mono.Xml.Schema.XsdWildcard a))
  (define (xsd-wildcard? a) (clr-is Mono.Xml.Schema.XsdWildcard a))
  (define-method-port
    examine-attribute-wildcard-intersection?
    Mono.Xml.Schema.XsdWildcard
    ExamineAttributeWildcardIntersection
    (System.Boolean
      System.Xml.Schema.XmlSchemaAny
      System.Xml.Schema.ValidationEventHandler
      System.Xml.Schema.XmlSchema))
  (define-method-port
    compile
    Mono.Xml.Schema.XsdWildcard
    Compile
    (System.Void
      System.String
      System.Xml.Schema.ValidationEventHandler
      System.Xml.Schema.XmlSchema))
  (define-method-port
    validate-wildcard-allows-namespace-name?
    Mono.Xml.Schema.XsdWildcard
    ValidateWildcardAllowsNamespaceName
    (System.Boolean
      System.String
      System.Xml.Schema.ValidationEventHandler
      System.Xml.Schema.XmlSchema
      System.Boolean))
  (define-field-port
    resolved-processing-get
    resolved-processing-set!
    resolved-processing-update!
    ()
    Mono.Xml.Schema.XsdWildcard
    ResolvedProcessing
    System.Xml.Schema.XmlSchemaContentProcessing)
  (define-field-port
    target-namespace-get
    target-namespace-set!
    target-namespace-update!
    ()
    Mono.Xml.Schema.XsdWildcard
    TargetNamespace
    System.String)
  (define-field-port
    skip-compile?-get
    skip-compile?-set!
    skip-compile?-update!
    ()
    Mono.Xml.Schema.XsdWildcard
    SkipCompile
    System.Boolean)
  (define-field-port
    has-value-any?-get
    has-value-any?-set!
    has-value-any?-update!
    ()
    Mono.Xml.Schema.XsdWildcard
    HasValueAny
    System.Boolean)
  (define-field-port
    has-value-local?-get
    has-value-local?-set!
    has-value-local?-update!
    ()
    Mono.Xml.Schema.XsdWildcard
    HasValueLocal
    System.Boolean)
  (define-field-port
    has-value-other?-get
    has-value-other?-set!
    has-value-other?-update!
    ()
    Mono.Xml.Schema.XsdWildcard
    HasValueOther
    System.Boolean)
  (define-field-port
    has-value-target-namespace?-get
    has-value-target-namespace?-set!
    has-value-target-namespace?-update!
    ()
    Mono.Xml.Schema.XsdWildcard
    HasValueTargetNamespace
    System.Boolean)
  (define-field-port
    resolved-namespaces-get
    resolved-namespaces-set!
    resolved-namespaces-update!
    ()
    Mono.Xml.Schema.XsdWildcard
    ResolvedNamespaces
    System.Collections.Specialized.StringCollection))
